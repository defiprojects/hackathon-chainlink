https://solodit.xyz/issues/trst-h-1-incorrect-implementation-of-getprofitsharinge18-greatly-reduces-lenders-yield-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-h-2-on-liquidation-if-netpnle36-0-the-premium-paid-by-the-liquidator-is-locked-in-the-contract-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-h-3-the-liquidated-person-can-make-the-liquidator-lose-premium-by-adding-collateral-in-advance-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-h-4-first-depositor-can-steal-asset-tokens-of-others-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-h-5-the-attacker-can-use-larger-dust-when-opening-a-position-to-perform-griefing-attacks-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-h-6-an-attacker-can-increase-liquidity-to-the-positions-uniswapnft-to-prevent-the-position-from-being-closed-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-h-7-pending-position-fees-miscalculation-may-result-in-increased-pnl-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-h-8-exact-output-swaps-cannot-be-executed-blocking-repayment-of-debt-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-m-1-markliquidationstatus-may-cause-the-liquidator-to-lose-premium-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-m-2-swaphelpergetcalldata-should-check-whitelistedrouters_router-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-m-3-no-check-for-active-arbitrum-sequencer-in-chainlink-oracle-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-m-4-the-swap-when-closing-a-position-does-not-consider-shareprofitamts-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-m-5-freezing-of-repaid-debts-can-cause-dos-when-borrowing-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-m-6-pending-fees-calculations-dont-allow-overflowingunderflowing-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-m-7-changing-liquidation-vault-or-token-makes-liquidations-impossible-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-m-8-the-freeze-mechanism-reduces-the-borrowableamount-which-reduces-lenders-yield-trust-security-none-stella-markdown_
https://solodit.xyz/issues/trst-h-1-a-malicious-operator-can-drain-the-vault-funds-in-one-transaction-trust-security-none-orbital-finance-markdown_
https://solodit.xyz/issues/trst-h-2-a-malicious-operator-can-steal-all-user-deposits-trust-security-none-orbital-finance-markdown_
https://solodit.xyz/issues/trst-m-1-removing-a-trade-path-in-router-will-cause-serious-data-corruption-trust-security-none-orbital-finance-markdown_
https://solodit.xyz/issues/trst-m-2-attacker-can-dos-deposit-transactions-due-to-strict-verifications-trust-security-none-orbital-finance-markdown_
https://solodit.xyz/issues/trst-m-3-user-deposits-can-fail-despite-using-the-correct-method-for-calculation-of-deposit-amounts-trust-security-none-orbital-finance-markdown_
https://solodit.xyz/issues/trst-m-4-deposits-of-fee-on-transfer-tokens-will-favor-later-depositors-making-earlier-investors-lose-funds-trust-security-none-orbital-finance-markdown_
https://solodit.xyz/issues/trst-h-1-an-attacker-can-drain-mozaic-vaults-by-manipulating-the-lp-price-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-10-mozbridge-underestimates-gas-for-sending-of-moz-messages-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-9-vault-does-not-have-a-way-to-withdraw-native-tokens-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-h-2-attacker-can-freeze-deposits-and-withdrawals-indefinitely-by-submitting-a-bad-withdrawal-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-h-3-all-layerzero-requests-will-fail-making-the-contracts-are-unfunctional-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-1-removal-of-multisig-members-will-corrupt-data-structures-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-2-multisig-could-become-permanently-locked-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-3-attacker-could-abuse-victims-vote-to-pass-their-own-proposal-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-4-users-can-lose-their-entire-xmoz-balance-when-specifying-too-short-a-duration-for-redemption-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-5-mozstaking-does-not-reserve-moz-tokens-for-redemptions-leading-to-unfulfillable-redemptions-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-6-moztoken-will-have-a-much-larger-fixed-supply-than-intended-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-7-moztoken-allows-owner-to-mint-an-arbitrary-amount-of-tokens-although-supply-is-fixed-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-8-the-vault-cannot-operate-with-popular-non-conforming-erc20-tokens-due-to-unsafe-transfers-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-m-11-no-slippage-protection-for-cross-chain-swaps-in-stargateplugin-trust-security-none-mozaic-archimedes-markdown_
https://solodit.xyz/issues/trst-h-1-user-fee-token-balance-can-be-drained-in-a-single-operation-by-a-malicious-bot-trust-security-none-brahma-markdown_
https://solodit.xyz/issues/trst-h-2users-can-drain-gelato-deposit-at-little-cost-trust-security-none-brahma-markdown_
https://solodit.xyz/issues/trst-h-3-attackers-can-drain-users-over-time-by-donating-negligible-erc20-amount-trust-security-none-brahma-markdown_
https://solodit.xyz/issues/trst-h-4-executors-can-drain-the-gelato-deposit-while-profiting-from-free-gas-trust-security-none-brahma-markdown
https://solodit.xyz/issues/trst-m-1-when-feepayer-is-subsidizing-users-can-steal-gas-trust-security-none-brahma-markdown_
https://solodit.xyz/issues/trst-m-2-strategy-actions-could-be-executed-out-of-order-due-to-lack-of-reentrancy-guard-trust-security-none-brahma-markdown_
https://solodit.xyz/issues/trst-m-3-anyone-can-make-creating-strategies-extremely-expensive-for-the-user-trust-security-none-brahma-markdown_
https://solodit.xyz/issues/trst-m-4-dca-strategies-may-not-be-effective-at-averaging-spot-prices-trust-security-none-brahma-markdown_
https://solodit.xyz/issues/trst-m-5-dca-strategies-build-orders-that-may-not-be-executable-wasting-fees-trust-security-none-brahma-markdown_
https://solodit.xyz/issues/trst-m-6-user-will-lose-all-console-functionality-when-upgrading-their-wallet-and-an-upgrade-target-has-not-been-set-up-trust-security-none-brahma-markdown
https://solodit.xyz/issues/trst-h-1-first-liquidity-provider-receives-increased-returned-shorts-due-to-increased-duration-trust-security-none-timeswap-markdown
https://solodit.xyz/issues/trst-h-2-pool-initialization-can-be-front-ran-to-manipulate-the-interest-rate-trust-security-none-timeswap-markdown
https://solodit.xyz/issues/trst-m-1-short-token-amounts-rounding-can-result-in-a-revert-when-burning-options-trust-security-none-timeswap-markdown
https://solodit.xyz/issues/trst-m-2-timeswapv2poolfactory-allows-creation-of-pools-with-non-standard-option-contracts-trust-security-none-timeswap-markdown
https://solodit.xyz/issues/trst-m-3-wrong-erc1155-metadata-uri-trust-security-none-timeswap-markdown
https://solodit.xyz/issues/trst-h-1-reentrancy-protection-can-likely-be-bypassed-trust-security-none-lukso-lsp-audit-markdown_
https://solodit.xyz/issues/trst-m-1-lsp20-verification-library-deviates-from-spec-and-will-accept-fail-values-trust-security-none-lukso-lsp-audit-markdown_
https://solodit.xyz/issues/trst-m-2-deviation-from-spec-will-result-in-dislocation-of-receiver-delegate-trust-security-none-lukso-lsp-audit-markdown_
https://solodit.xyz/issues/trst-m-3-lsp0-allows-delegate-calls-when-lsp20-post-execution-check-is-required-trust-security-none-lukso-lsp-audit-markdown_
https://solodit.xyz/issues/trst-m-4-incorrect-decoding-of-universalreceiver-call-trust-security-none-lukso-lsp-audit-markdown_
https://solodit.xyz/issues/trst-m-5-renounceownership-will-accidentally-be-one-step-in-a-certain-time-period-trust-security-none-lukso-lsp-audit-markdown_
https://solodit.xyz/issues/trst-m-6-keymanager-erc165-does-not-support-lsp20-trust-security-none-lukso-lsp-audit-markdown_
https://solodit.xyz/issues/trst-m-7-incorrect-permission-check-due-to-confusion-between-empty-call-and-the-zero-selector-trust-security-none-lukso-lsp-audit-markdown_
https://solodit.xyz/issues/trst-h-1-_calculateclaim-does-not-distribute-boost-emissions-correctly-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-h-2-users-will-be-unable-to-claim-emissions-from-vesatin-tokens-if-they-withdraw-it-or-merge-it-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-h-3-additional-satincash-lp-locked-in-an-owner-created-vesatin-cant-be-withdrawn-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-h-4-its-possible-to-dos-the-distribution-of-weekly-emissions-and-as-a-consequence-the-whole-protocol-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-h-5-its-possible-to-dos-voting-for-the-whole-protocol-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-h-6-its-never-possible-to-vote-for-new-pools-until-setmaxvotesforpool-is-called-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-h-7-the-protocol-might-transfer-extra-satin-emissions-to-vesatin-holders-potentially-making-satinvotersol-insolvent-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-h-8-its-possible-to-drain-all-the-funds-from-externalbribe-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-h-9-anybody-can-withdraw-the-admin-fees-in-the-4pool-for-themselves-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-1-division-by-0-can-freeze-emissions-claims-for-vesatin-holders-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-2-anybody-can-forfeit-partner-fees-if-there-are-no-partners-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-3-basev1pair-could-break-because-of-overflow-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-4-its-possible-to-dilute-rewards-per-second-in-gauge-and-internal-bribes-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-5-creategauge4pool-lacks-proper-checks-andor-access-control-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-6-_vote-doesnt-check-the-pool-a-user-is-voting-for-has-a-valid-gauge-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-7-its-possible-to-freely-detach-tokens-from-a-gauge-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-8-calculation-of-the-new-emissions-amount-is-not-75255-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-9-users-have-to-lock-satincash-lp-in-vesol-to-vote-but-they-lose-on-fees-while-doing-so-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-m-10-updateperiod-distributes-the-same-amount-of-emissions-regardless-of-the-time-passed-from-the-last-distribution-trust-security-none-satinexchange-markdown_
https://solodit.xyz/issues/trst-h-1-more-than-one-hat-of-the-same-hatid-can-be-assigned-to-a-user-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-h-2-txs-can-be-executed-by-less-than-the-minimum-required-signatures-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-h-3-target-signature-threshold-can-be-bypassed-leading-to-minority-txs-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-h-4-maxsigners-can-be-bypassed-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-h-5-minority-may-be-able-to-call-safe-operations-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-m-1-hats-token-breaks-erc1155-specifications-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-m-2-attacker-can-dos-minting-of-new-top-hats-in-low-fee-chains-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-m-3-linking-of-hat-trees-can-freeze-hat-operations-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-m-4-admin-can-transfer-hat-to-a-non-eligible-target-potentially-burning-the-hat-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-m-5-attacker-can-make-a-signer-gate-creation-fail-trust-security-none-hats-protocol-markdown
https://solodit.xyz/issues/trst-m-6-signers-can-backdoor-the-safe-to-execute-any-transaction-in-the-future-without-consensus-trust-security-none-hats-protocol-markdown
https://solodit.xyz/issues/trst-m-7-hats-cant-be-renounced-when-not-worn-leading-to-abuse-concerns-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-m-8-safety-checks-compare-safes-threshold-with-a-stale-value-trust-security-none-hats-protocol-markdown_
https://solodit.xyz/issues/trst-m-1-operator-can-spoof-query-fees-to-make-net-profit-from-pool-trust-security-none-the-graph-operator-decentralization-markdown
https://solodit.xyz/issues/trst-h-1-canhedge-may-return-wrong-result-when-there-is-a-pending-position-request-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-h-2-canhedge-will-return-true-when-hedging-requirement-would-be-above-the-defined-hedgecap-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-h-3-disordered-fee-calculated-causes-collateral-changes-to-be-inaccurate-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-1-small-lp-providers-may-be-unable-to-withdraw-their-deposits-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-2-shortcollateral-settleoptions-may-fail-due-to-insolvency-settled-out-of-loop-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-3-base-to-quote-swaps-trust-gmx-provided-minprice-and-maxprice-to-be-correct-which-may-be-manipulated-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-4-sendallfundstolp-does-not-handle-popular-erc20-tokens-like-bnb-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-5-recoverfunds-does-not-handle-popular-erc20-tokens-like-bnb-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-6-option-board-will-be-settled-with-incorrect-prices-when-settled-after-a-delay-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-7-attackers-can-delay-or-disrupt-hedging-activity-by-abusing-mutual-exclusion-with-updatecollateral-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-8-protectedquote-can-be-manipulated-by-calling-processdepositqueue-when-large-price-moves-in-base-asset-occur-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-9-canhedge-may-return-true-when-there-is-insufficient-gmx-liquidity-to-facilitate-hedging-causing-insolvency-risks-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-10-canhedge-will-return-true-when-trade-moves-delta-in-same-direction-as-expectedhedge-even-when-that-leads-to-more-risk-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-m-11-decreasing-a-losing-hedge-position-could-make-it-overly-leveraged-trust-security-none-lyra-finance-markdown_
https://solodit.xyz/issues/trst-h-1-attacker-can-freeze-profit-withdrawals-from-v3-vaults-trust-security-none-ninja-yield-farming-v3-markdown_
https://solodit.xyz/issues/trst-h-2-lack-of-child-rewarder-reserves-could-lead-to-freeze-of-funds-trust-security-none-ninja-yield-farming-v3-markdown_
https://solodit.xyz/issues/trst-h-3-wrong-accounting-of-users-holdings-allows-theft-of-reward-trust-security-none-ninja-yield-farming-v3-markdown_
https://solodit.xyz/issues/trst-m-1-unsafe-transferfrom-breaks-compatibility-with-100s-of-erc20-tokens-trust-security-none-ninja-yield-farming-v3-markdown_
https://solodit.xyz/issues/trst-m-2-attacker-can-force-partial-withdrawals-to-fail-trust-security-none-ninja-yield-farming-v3-markdown_
https://solodit.xyz/issues/trst-m-3-rewards-may-be-stuck-due-to-unchangeable-slippage-parameter-trust-security-none-ninja-yield-farming-v3-markdown_
https://solodit.xyz/issues/trst-m-4-truncation-in-reward-calculation-could-cause-leakage-of-rewards-trust-security-none-ninja-yield-farming-v3-markdown_
https://solodit.xyz/issues/trst-m-5-potential-overflow-in-reward-accumulator-may-freeze-functionality-trust-security-none-ninja-yield-farming-v3-markdown_
https://solodit.xyz/issues/trst-h-1-createuniswaprangeorder-charges-manager-instead-of-pool-trust-security-none-rysk-uniswapv3rangeorderreactor-markdown_
https://solodit.xyz/issues/trst-h-2-hedgedelta-pricetouse-is-calculated-wrong-which-causes-bad-hedges-trust-security-none-rysk-uniswapv3rangeorderreactor-markdown_
https://solodit.xyz/issues/trst-m-1-multiplication-overflow-in-getpoolprice-likely-trust-security-none-rysk-uniswapv3rangeorderreactor-markdown_
https://solodit.xyz/issues/trst-m-2-hedging-wont-work-if-token1decimals-token0decimals-trust-security-none-rysk-uniswapv3rangeorderreactor-markdown
https://solodit.xyz/issues/trst-m-3-overflow-danger-in-_sqrtpricex96touint-trust-security-none-rysk-uniswapv3rangeorderreactor-markdown_
https://solodit.xyz/issues/trst-m-4-hedgedelta0-doesnt-behave-properly-trust-security-none-rysk-uniswapv3rangeorderreactor-markdown_